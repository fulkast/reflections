Using diff to track differences between old and new files.

Helps to realize small things like typos
Narrows down the search space for error causing code.
Having the entire history of a file, I can be a more efficient programmer because

I can test new components and revert back to older versions
Over time I can keep track of recurrent useful/harmful patterns.
Git means unpleasant. Linus' thing.

Commits are pretty much user-picked save points. Each commit should have one clear cut purpose.

Being able to manually pick commits as opposed to automatic commits brings the advantage that we can keep a log of the logical changes. Since we can decide where the commits occur, this helps in creating the track of the progress, in hindsight.

The expected form of files in git are source codes that depend on each other, hence the system allows for adding multiple files to a single commit. With google docs, the expected form of files are independent documents, hence the files are saved independently.

We can use git log and git diff to see the specific "jumps" from one commit to another.

git checkout does not equal an svn checkout.

if we introduced a bug in a new version, then we can checkout an older version.

Version control is great! It let's me not worry about introducing mistakes, because then I could always easily fallback to some working previous version.

I want to use git to quickly prototype, tryout different algorithms and designs for my projects.

One can at times commit to 1, make changes, commit to 2, revert changes and then commit to 3. In this case, reverting from 3 to 1 brings no changes.
